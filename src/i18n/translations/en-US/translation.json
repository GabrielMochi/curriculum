{
  "intro": {
    "firstName": "Gabriel",
    "lastName": "Mochi",
    "role": "Senior Full Stack Engineer"
  },
  "contact": {
    "label": "Contact",
    "location": {
      "label": "Location",
      "value": "Montreal, QC, Canada"
    },
    "email": {
      "label": "E-mail",
      "value": "contact@gabrielmochi.dev"
    }
  },
  "social": {
    "label": "Social",
    "linkedin": {
      "label": "LinkedIn"
    },
    "github": {
      "label": "Github"
    },
    "stackOverflow": {
      "label": "Stack Overflow"
    }
  },
  "academicEducation": {
    "label": "Academic Education",
    "incomplete": "incomplete",
    "records": {
      "fatec": {
        "courseTitle": "Analysis and Systems Development",
        "institutionName": "Faculdade de Tecnologia de São Paulo (FATEC-SP)"
      },
      "ifsp": {
        "courseTitle": "Professional Degree in Information Technology",
        "institutionName": "Instituto Federal de São Paulo (IFSP)"
      }
    }
  },
  "certifications": {
    "label": "Certifications",
    "records": {
      "conquer": {
        "certificationTitle": "Grow your business (Entrepreneurship)",
        "institutionName": "Conquer School"
      },
      "conquerSales": {
        "certificationTitle": "Negotiation, Influence and Sales",
        "institutionName": "Conquer School"
      },
      "ibmBluemix": {
        "certificationTitle": "Bluemix Essentials",
        "institutionName": "IBM"
      },
      "prandiano": {
        "certificationTitle": "Applied Mathematics",
        "institutionName": "Prandiano - Museum of Mathematics"
      }
    }
  },
  "about": {
    "title": "about",
    "description": "I'm a **Senior Software Engineer** and **Full Stack Engineer** with **over eight years of experience** building web applications, servers, APIs, and process automation.\n\nAs a developer, my central dilemma is developing code that is readable not only for the computer, but _especially for humans_. This implies a well-structured code that follows the principles of good practice and is easy to maintain.\n\nIn addition to the other skills listed in my profile, this is **my main stack**: Node.js, React, Next.js, NestJS, TypeScript, JavasScript, MongoDB, PostgreSQL, and Redis."
  },
  "professionalHistory": {
    "periodDateFormat": "MMM YYYY",
    "present": "Present",
    "title": "Professional Experience",
    "records": {
      "estateably": {
        "company": "Estateably",
        "jobTitle": "Senior Full Stack Developer",
        "location": {
          "city": "Montreal",
          "state": "QC",
          "country": "Canada"
        },
        "description": {
          "highlights": [
            "He Developed several improvements in projects focused on the legal and financial sectors by adding new features, fixing bugs, and resolving technical debt on both the frontend (React + TypeScript) and backend (Node.js).",
            "Participated in the structuring and development of a new vault platform. The backend of this platform was built using NestJS + TypeScript, while the frontend was developed in React. Data was stored through MongoDB, and uploaded files were stored in AWS S3.",
            "Collaborated with the backend integration and restructuring of the payment system through Stripe.",
            "Enhanced and improved the coverage of E2E (Cypress), unit (Jest), and integration tests for each new or modified feature in the product.",
            "Contributed to the OpenAPI (Swagger) documentation by adding more specifications as new APIs were added or modified."
          ]
        }
      },
      "monis": {
        "company": "Monis",
        "jobTitle": "Founding Engineer",
        "location": {
          "city": "São Paulo",
          "state": "SP",
          "country": "Brazil"
        },
        "description": {
          "highlights": [
            "He contributed to the architecture of the server-side application using NestJS (Node.js) and Typescript. The application integrated with a PostgreSQL database through TypeORM and included Redis for queue orchestration. It also connected to external APIs such as Auth0 for user session management, AWS SES, and Stripe for payment processing.",
            "Played a key role in the development of the web platform using Next.js and Chakra UI, which became the first platform for users to interact with the Monis system.",
            "Using Flutter for the web, he designed and built an intuitive admin portal, enabling employees to manage users more efficiently.",
            "He implemented the initial CI/CD processes and automated testing, contributing to the reliability and stability of Monis' applications.",
            "He created container structures, using Docker, for application deployment within a GCP-architected infrastructure."
          ]
        }
      },
      "mutant": {
        "company": "Mutant",
        "jobTitle": "Back End Engineer",
        "location": {
          "city": "São Paulo",
          "state": "SP",
          "country": "Brazil"
        },
        "description": {
          "highlights": [
            "He contributed to the development of chatbot flows using Node.js and Typescript, ensuring precise responses aligned with user message intent. The application integrated external NLP services to handle message intent detection.",
            "These interactions were primarily focused on WhatsApp's front-end, and he also helped facilitate HTTP calls to Google Maps APIs to provide location-based information in specific chatbot flows."
          ]
        }
      },
      "kpmg": {
        "company": "KPMG",
        "jobTitle": "Junior Full Stack Developer",
        "location": {
          "city": "São Paulo",
          "state": "SP",
          "country": "Brazil"
        },
        "description": {
          "highlights": [
            "He created web portals using Vue.js/Nuxt and Node.js so that users could access artificial intelligence tools. These portals' records and data were stored in a MongoDB database, and the user sessions were kept in Redis.",
            "Using Node.js, he designed and deployed chatbots that improved organizational communication. These chatbots were equipped with cognitive conversational capabilities from IBM Watson Conversation and Microsoft Bot Framework.",
            "At clients' request, he automated several internal audit and financial services processes with Node.js. Most of these automations were integrated with Watson APIs (IBM Cloud) or Microsoft Azure artificial intelligence services.",
            "Developed web scrapers using tools such as Selenium and Puppeteer to extract data from the web."
          ]
        }
      },
      "britech": {
        "company": "BRITech",
        "jobTitle": "Developer Intern",
        "location": {
          "city": "São Paulo",
          "state": "SP",
          "country": "Brazil"
        },
        "description": {
          "highlights": [
            "Developed a ChatBot for first-level support, which aimed to assist users with questions about the usability of an internal product provided by BRITech. Customers interacted with the bot through a web application developed in HTML, CSS, and JavaScript. The messaging service was developed in Node.js, which, through an API, integrated with IBM Watson's NLP services to obtain answers to users' questions.",
            "Taking advantage of the aforementioned bot's capacity, he developed a service in Node.js that integrated ZenDesk requests with the IBM Watson APIs. This way, users who opened tickets through ZenDesk would already receive a personalized and instantaneous response from the bot without the initial need for human activation.",
            "Within a squad, he collaborated with improvements and bug fixes in a frontend project that used the Aurelia framework and TypeScript."
          ]
        }
      }
    }
  }
}
